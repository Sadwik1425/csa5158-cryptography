#include <stdio.h>
#include <string.h>
#include <math.h>

#define ALPHABET_SIZE 26

double englishLetterFrequencies[ALPHABET_SIZE] = {
    0.0817, 0.0149, 0.0278, 0.0425, 0.1270, 0.0223, 0.0202, 0.0609,
    0.0695, 0.0015, 0.0077, 0.0402, 0.0240, 0.0675, 0.0751, 0.0193,
    0.0009, 0.0599, 0.0633, 0.0906, 0.0276, 0.0098, 0.0236, 0.0015,
    0.0197, 0.0007
};

double calculateScore(char* text) {
    double score = 0.0;
    int letterCounts[ALPHABET_SIZE] = {0};
    int length = strlen(text);

    for (int i = 0; i < length; i++) {
        char c = tolower(text[i]);
        if (c >= 'a' && c <= 'z') {
            letterCounts[c - 'a']++;
        }
    }

    for (int i = 0; i < ALPHABET_SIZE; i++) {
        double frequency = (double)letterCounts[i] / length;
        score += pow(frequency - englishLetterFrequencies[i], 2);
    }

    return score;
}

int main() {
    char ciphertext[] = "your ciphertext here";
    char plaintext[26];
    double bestScore = INFINITY;

    for (int i = 0; i < 26; i++) {
        plaintext[0] = 'a' + i;
        plaintext[1] = '\0';
        double score = calculateScore(plaintext);
        if (score < bestScore) {
            bestScore = score;
            printf("Top plaintext candidate: %c (score: %f)\n", plaintext[0], score);
        }
    }

    return 0;
}
output
Top plaintext candidate: e (score: 0.003915)
